[{"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\index.jsx":"1","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\App.jsx":"2","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\Login.jsx":"3","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\Start.jsx":"4","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\SignUp.jsx":"5","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\Home.jsx":"6","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\SideBar.jsx":"7","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\SideBarOption.jsx":"8","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\Feeds.jsx":"9","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\Widgets.jsx":"10","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\TweetBox.jsx":"11","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\Tweets.jsx":"12","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\Profile.jsx":"13","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\ProfileBox.jsx":"14"},{"size":220,"mtime":1608569974919,"results":"15","hashOfConfig":"16"},{"size":808,"mtime":1608888991052,"results":"17","hashOfConfig":"16"},{"size":4589,"mtime":1608816610708,"results":"18","hashOfConfig":"16"},{"size":3123,"mtime":1608656622067,"results":"19","hashOfConfig":"16"},{"size":7563,"mtime":1608816545426,"results":"20","hashOfConfig":"16"},{"size":506,"mtime":1608840657354,"results":"21","hashOfConfig":"16"},{"size":2562,"mtime":1608894742847,"results":"22","hashOfConfig":"16"},{"size":278,"mtime":1608823995629,"results":"23","hashOfConfig":"16"},{"size":629,"mtime":1608842906226,"results":"24","hashOfConfig":"16"},{"size":151,"mtime":1608891285070,"results":"25","hashOfConfig":"16"},{"size":1269,"mtime":1608836879579,"results":"26","hashOfConfig":"16"},{"size":1693,"mtime":1608842179075,"results":"27","hashOfConfig":"16"},{"size":1086,"mtime":1608919020248,"results":"28","hashOfConfig":"16"},{"size":3286,"mtime":1608919952694,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jghjp",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\index.jsx",[],["63","64"],"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\App.jsx",[],"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\Login.jsx",[],"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\Start.jsx",[],"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\SignUp.jsx",["65","66","67","68","69"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Button, Container, Paper, TextField, Typography, Snackbar, SnackbarContent } from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab/'\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\"\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        color: 'white'\r\n    },\r\n    btn: {\r\n        margin: '4px'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(6),\r\n        textAlign: 'center',\r\n        width: '100vw',\r\n\r\n    },\r\n    txt: {\r\n        fontWeight: 'bold',\r\n\r\n    },\r\n    mainDiv: {\r\n        paddingTop: '100px',\r\n        paddingBottom: '100px',\r\n        backgroundColor: \"rgb(26, 27, 31)\",\r\n        color: 'white',\r\n        // textAlign: 'center'\r\n    },\r\n    img: {\r\n        height: \"90vh\",\r\n        width: \"fixContent\"\r\n    },\r\n    box: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n    const history = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('');\r\n    const [dob, setDOb] = useState();\r\n\r\n    const postCredentials = () => {\r\n\r\n        if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\r\n            toast.error('Invaild Email');\r\n            return\r\n        }\r\n        fetch(\"http://localhost:4000/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n                dob: dob\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    toast.info(`${data.error}`)\r\n                } else {\r\n                    toast.success(`${data.message}`);\r\n                    history.push('/login');\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={props.openx}\r\n                onClose={props.cl}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={props.openx}>\r\n\r\n                    <Paper >\r\n                        <Container className={classes.mainDiv}>\r\n                            <TwitterIcon fontSize=\"large\" style={{ textAlign: 'center' }} color=\"primary\" />\r\n                            <Typography variant=\"h4\" component=\"h1\" className={classes.txt}>\r\n                                Create Your Account.\r\n                            </Typography>\r\n                            <form noValidate autoComplete=\"off\">\r\n                                <Container className={classes.form} style={{ textAlign: 'center' }}>\r\n                                    <TextField\r\n                                        inputProps={{ style: { fontFamily: 'Arial', color: 'white' } }}\r\n                                        style={{ color: 'white' }}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                        value={name} id='standard-basic'\r\n                                        label='Name' />\r\n                                    <br></br>\r\n                                    <TextField\r\n                                        inputProps={{ style: { fontFamily: 'Arial', color: 'white' } }}\r\n                                        id='standard-basic'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                        label='Email' />\r\n                                    <br></br>\r\n                                    <TextField\r\n                                        inputProps={{ style: { fontFamily: 'Arial', color: 'white' } }}\r\n                                        id='standard-basic'\r\n                                        type=\"password\"\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        value={password} label='passowrd' />\r\n                                    <br></br>\r\n\r\n                                    <Typography variant=\"h6\"\r\n                                        inputProps={{ style: { fontFamily: 'Arial', color: 'white' } }}\r\n                                        component=\"h6\" className={classes.txt}>\r\n                                        Date of Birth.\r\n                            </Typography>\r\n                                    <p>This will not be shown publicly. Confirm your own age, even if this account is for a business, a pet, or something else</p>\r\n                                    <br></br>\r\n\r\n                                    <TextField\r\n                                        style={{ color: 'white' }}\r\n                                        id=\"date\"\r\n                                        label=\"Birthday\"\r\n                                        color='secondary'\r\n                                        type=\"date\"\r\n                                        value={dob}\r\n                                        onChange={(e) => setDOb(e.target.value)}\r\n                                        className={classes.textField}\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                    />\r\n                                    <br></br>\r\n                                    <Button className={classes.btn} variant=\"contained\"\r\n                                        onClick={() => postCredentials()}\r\n                                        color=\"primary\">Sign Up</Button>\r\n                                </Container>\r\n                            </form>\r\n                            <Link to=\"/login\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                                <p style={{ textAlign: 'center' }}>Already Have an account?</p></Link>\r\n                        </Container>\r\n                    </Paper>\r\n\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\Home.jsx",[],"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\SideBar.jsx",[],"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\SideBarOption.jsx",["70","71"],"import React from 'react';\r\nimport { Button, Icon } from '@material-ui/core';\r\n\r\nexport default function SideBarOptions({Icon,text,active }){\r\n    return(\r\n   \r\n        <div className=\"sidebarOption\">\r\n            <Icon />\r\n            <h2>{text}</h2>\r\n        </div>\r\n    )\r\n} ","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\Feeds.jsx",[],"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\Widgets.jsx",[],"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\TweetBox.jsx",[],"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\Tweets.jsx",["72","73","74"],"import { Avatar } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'; \r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport ChatBubbleOutlinedIcon from '@material-ui/icons/ChatBubbleOutlined';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport RepeatOutlinedIcon from '@material-ui/icons/RepeatOutlined';\r\nimport PublishOutlinedIcon from '@material-ui/icons/PublishOutlined';\r\nexport default function ({\r\n    text,\r\n    image,\r\n    username,\r\n    displayName,\r\n    idVerified,\r\n    avatar\r\n}){\r\n    return(\r\n        <div className=\"tweet\">\r\n            <div className=\"tweet__avatar\">\r\n                <Avatar/>\r\n            </div>\r\n            <div className=\"tweet__body\">\r\n                <div className=\"tweet__header\">\r\n                    <div className=\"tweet__headerText\">\r\n                        <h4>\r\n                            Rohan <span className=\"tweet__username\"><VerifiedUserIcon className=\"tweet__badge\"/>@rohanxajput</span>\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"tweet__description\">\r\n                        <p>Hey are you fucking crazt while making this twitter clone</p>\r\n                    </div>\r\n                </div>\r\n                <img src=\"https://i.imgflip.com/3jfdee.jpg\"/>\r\n                <div className=\"tweet__footer\">\r\n                    <ChatBubbleOutlinedIcon />\r\n                    <RepeatOutlinedIcon/>\r\n                    <FavoriteBorderOutlinedIcon/>\r\n                    <PublishOutlinedIcon/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\Profile.jsx",["75"],"D:\\Code-Playground\\Web-D\\React.JS\\Twitter-clone\\client\\src\\components\\screens\\layout\\ProfileBox.jsx",["76","77","78"],"import { Avatar, Button } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport CakeOutlinedIcon from '@material-ui/icons/CakeOutlined';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport RoomOutlinedIcon from '@material-ui/icons/RoomOutlined';\r\nimport EventOutlinedIcon from '@material-ui/icons/EventOutlined';\r\n\r\nexport default function ProfileBox() {\r\n    return (\r\n        <div className=\"profile__box\">\r\n            <div className=\"profile__cover\">\r\n                <img src=\"https://pbs.twimg.com/profile_banners/1272757579643449344/1592923065/1500x500\" />\r\n            </div>\r\n            <div className=\"profile__main\">\r\n                <div className=\"profile__upper\">\r\n                    <img src=\"https://avatars2.githubusercontent.com/u/48005711?s=460&u=abaa04acd2f5c5e72173ff7201ca4a1abcd7a509&v=4\" />\r\n\r\n                    <div>\r\n\r\n                        <Button className=\"edit__btn\" variant=\"contained\">\r\n                            Edit Image\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                    <h2>icodeRohan\r\n                    </h2>\r\n                    <span>@rohanxajput</span>\r\n                    <div className=\"para\">A Prototypical computer nerdMan technologist\r\nLiv'in with full of negative vibesNegative squared cross mark\r\nStay away cuz i==toxic for youExpressionless faceExpressionless face\r\nPython and JavaScript enthusiasts\r\nWeB D | Express|Node</div>\r\n\r\n                    <div className=\"profile__lastDiv\">\r\n\r\n                        <div className=\"profile__tags1\">\r\n                            <h4>\r\n                                <span className=\"icons\">\r\n                                    <RoomOutlinedIcon fontSize=\"small\" />\r\n                                </span>\r\n                        New Delhi, India\r\n                        </h4>\r\n                            <h4>\r\n                                <span className=\"icons\" >\r\n                                    <CakeOutlinedIcon  fontSize=\"small\" />\r\n                                </span>\r\n                        Born January 16, 2001\r\n                        </h4>\r\n                        </div>\r\n\r\n                        <div className=\"profile__tags1\">\r\n                            <h4>\r\n                           <span className=\"icons\" >\r\n                            <LinkIcon fontSize=\"small\"/>\r\n                        </span>\r\n                        <a href=\"https://codebloded.github.io/icoderohan/\" target=\"__blank\"> codebloded.github.io/icoderohan/</a></h4>\r\n                            <h4>\r\n                            <span className=\"icons\">\r\n                            <EventOutlinedIcon   fontSize=\"small\"/>\r\n                        </span>\r\n                            Joined June 2020</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile__followx\">\r\n                        <h3>\r\n                            122 <span>Following</span>\r\n                        </h3>\r\n                        <h3>\r\n                            22 <span>Followers</span>\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":6,"column":59,"nodeType":"85","messageId":"86","endLine":6,"endColumn":67},{"ruleId":"83","severity":1,"message":"87","line":6,"column":69,"nodeType":"85","messageId":"86","endLine":6,"endColumn":84},{"ruleId":"83","severity":1,"message":"88","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":15},{"ruleId":"83","severity":1,"message":"89","line":7,"column":17,"nodeType":"85","messageId":"86","endLine":7,"endColumn":27},{"ruleId":"90","severity":1,"message":"91","line":42,"column":5,"nodeType":"92","messageId":"93","endLine":42,"endColumn":10},{"ruleId":"83","severity":1,"message":"94","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":16},{"ruleId":"83","severity":1,"message":"95","line":2,"column":18,"nodeType":"85","messageId":"86","endLine":2,"endColumn":22},{"ruleId":"83","severity":1,"message":"96","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":9,"column":1,"nodeType":"99","endLine":44,"endColumn":2},{"ruleId":"100","severity":1,"message":"101","line":33,"column":17,"nodeType":"102","endLine":33,"endColumn":62},{"ruleId":"83","severity":1,"message":"94","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":16},{"ruleId":"83","severity":1,"message":"103","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":12,"column":17,"nodeType":"102","endLine":12,"endColumn":108},{"ruleId":"100","severity":1,"message":"101","line":16,"column":21,"nodeType":"102","endLine":16,"endColumn":137},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Snackbar' is defined but never used.","Identifier","unusedVar","'SnackbarContent' is defined but never used.","'Alert' is defined but never used.","'AlertTitle' is defined but never used.","no-dupe-keys","Duplicate key 'paper'.","ObjectExpression","unexpected","'Button' is defined but never used.","'Icon' is defined but never used.","'MoreHorizIcon' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","no-global-assign","no-unsafe-negation"]